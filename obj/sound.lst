                              1 ;;;-----------------------------------------
                              2 ;;; Start MC6811 gcc assembly output
                              3 ;;; gcc compiler compiled on TBD
                              4 ;;; OPTIONS:	-mlong_branch optimize  
                              5 ;;; OPTIONS:	 peephole !omit_frame_pointer !signed-char
                              6 ;;; Source:		services\sound.c
                              7 ;;; Destination:	sound.s
                              8 ;;; Compiled:	Tue Oct 24 21:55:28 2000
                              9 ;;; (META)compiled by GNU C version 2.8.1.
                             10 ;;;-----------------------------------------
                             11 	.module sound.c
                             12 	.area	_CODE
                             13 	.globl	_sound_tick
   0000                      14 _sound_tick:
                             15 ;;;-----------------------------------------
                             16 ;;;  PROLOGUE for sound_tick
                             17 ;;;-----------------------------------------
   0000 18 3C                18 	pshy	; Save stack frame
   0002 18 30                19 	tsy	; Set current stack frame
   0004 DE 00                20 	ldx	*ZD5
   0006 3C                   21 	pshx	; pushed register *ZD5
                             22 ;;;END PROLOGUE
   0007 F6 10 00             23 	ldab	4096
   000A D7 01                24 	stab	*ZD5+1	; movqi: 4096 -> *ZD5
   000C D6 01                25 	ldab	*ZD5+1
   000E C8 08                26 	eorb	#8
   0010 D7 01                27 	stab	*ZD5+1	; xorqi3: *ZD5 by #8 -> *ZD5
   0012 D6 01                28 	ldab	*ZD5+1
   0014 F7 10 00             29 	stab	4096	; movqi: *ZD5 -> 4096
                             30 ;;;EPILOGUE
   0017 38                   31 	pulx	; Pulling register *ZD5
   0018 DF 00                32 	stx	*ZD5
   001A 18 38                33 	puly	; Restore stack frame
   001C 39                   34 	rts	; return from function
                             35 ;;;-----------------------------------------
                             36 ;;; END EPILOGUE for sound_tick
                             37 ;;;-----------------------------------------
                             38 	.globl	_sound_on
   001D                      39 _sound_on:
                             40 ;;;-----------------------------------------
                             41 ;;;  PROLOGUE for sound_on
                             42 ;;;-----------------------------------------
   001D 18 3C                43 	pshy	; Save stack frame
   001F 18 30                44 	tsy	; Set current stack frame
   0021 DE 00                45 	ldx	*ZD5
   0023 3C                   46 	pshx	; pushed register *ZD5
                             47 ;;;END PROLOGUE
   0024 DC 00                48 	ldd	*ZD0
   0026 1A B3 00 00          49 	cpd	_beep_tone	; cmphi *ZD0 with _beep_tone
   002A 26 03                50 	bne	.+5
   002C 7E 00 79             51 	jmp	L3	; (beq) long branch
   002F DC 00                52 	ldd	*ZD0
   0031 FD 00 00             53 	std	_beep_tone	; movhi: *ZD0 -> _beep_tone
   0034 FC 10 0E             54 	ldd	4110
   0037 DD 00                55 	std	*ZD5	; movhi: 4110 -> *ZD5
   0039 DC 00                56 	ldd	*ZD5
   003B D3 00                57 	addd	*ZD0
   003D DD 00                58 	std	*ZD5	; addhi3: *ZD5 by *ZD0 -> *ZD5
   003F DC 00                59 	ldd	*ZD5
   0041 FD 10 1E             60 	std	4126	; movhi: *ZD5 -> 4126
   0044 C6 08                61 	ldab	#8
   0046 F7 10 23             62 	stab	4131	; movqi: #8 -> 4131
   0049 F6 10 20             63 	ldab	4128
   004C D7 01                64 	stab	*ZD5+1	; movqi: 4128 -> *ZD5
   004E D6 01                65 	ldab	*ZD5+1
   0050 CA 01                66 	orab	#1
   0052 D7 01                67 	stab	*ZD5+1	; iorqi3: *ZD5 by #1 -> *ZD5
   0054 D6 01                68 	ldab	*ZD5+1
   0056 F7 10 20             69 	stab	4128	; movqi: *ZD5 -> 4128
   0059 F6 10 20             70 	ldab	4128
   005C D7 01                71 	stab	*ZD5+1	; movqi: 4128 -> *ZD5
   005E D6 01                72 	ldab	*ZD5+1
   0060 C4 FD                73 	andb	#253
   0062 D7 01                74 	stab	*ZD5+1	; andqi3: *ZD5 by #253 -> *ZD5
   0064 D6 01                75 	ldab	*ZD5+1
   0066 F7 10 20             76 	stab	4128	; movqi: *ZD5 -> 4128
   0069 F6 10 22             77 	ldab	4130
   006C D7 01                78 	stab	*ZD5+1	; movqi: 4130 -> *ZD5
   006E D6 01                79 	ldab	*ZD5+1
   0070 CA 08                80 	orab	#8
   0072 D7 01                81 	stab	*ZD5+1	; iorqi3: *ZD5 by #8 -> *ZD5
   0074 D6 01                82 	ldab	*ZD5+1
   0076 F7 10 22             83 	stab	4130	; movqi: *ZD5 -> 4130
   0079                      84 L3:
                             85 ;;;EPILOGUE
   0079 38                   86 	pulx	; Pulling register *ZD5
   007A DF 00                87 	stx	*ZD5
   007C 18 38                88 	puly	; Restore stack frame
   007E 39                   89 	rts	; return from function
                             90 ;;;-----------------------------------------
                             91 ;;; END EPILOGUE for sound_on
                             92 ;;;-----------------------------------------
                             93 	.globl	_sound_off
   007F                      94 _sound_off:
                             95 ;;;-----------------------------------------
                             96 ;;;  PROLOGUE for sound_off
                             97 ;;;-----------------------------------------
   007F 18 3C                98 	pshy	; Save stack frame
   0081 18 30                99 	tsy	; Set current stack frame
   0083 DE 00               100 	ldx	*ZD5
   0085 3C                  101 	pshx	; pushed register *ZD5
                            102 ;;;END PROLOGUE
   0086 F6 10 22            103 	ldab	4130
   0089 D7 01               104 	stab	*ZD5+1	; movqi: 4130 -> *ZD5
   008B D6 01               105 	ldab	*ZD5+1
   008D C4 7F               106 	andb	#127
   008F D7 01               107 	stab	*ZD5+1	; andqi3: *ZD5 by #127 -> *ZD5
   0091 D6 01               108 	ldab	*ZD5+1
   0093 F7 10 22            109 	stab	4130	; movqi: *ZD5 -> 4130
   0096 F6 10 20            110 	ldab	4128
   0099 D7 01               111 	stab	*ZD5+1	; movqi: 4128 -> *ZD5
   009B D6 01               112 	ldab	*ZD5+1
   009D C4 FC               113 	andb	#252
   009F D7 01               114 	stab	*ZD5+1	; andqi3: *ZD5 by #252 -> *ZD5
   00A1 D6 01               115 	ldab	*ZD5+1
   00A3 F7 10 20            116 	stab	4128	; movqi: *ZD5 -> 4128
   00A6 CC 00 00            117 	ldd	#0
   00A9 FD 00 00            118 	std	_beep_tone	; movhi: #0 -> _beep_tone
                            119 ;;;EPILOGUE
   00AC 38                  120 	pulx	; Pulling register *ZD5
   00AD DF 00               121 	stx	*ZD5
   00AF 18 38               122 	puly	; Restore stack frame
   00B1 39                  123 	rts	; return from function
                            124 ;;;-----------------------------------------
                            125 ;;; END EPILOGUE for sound_off
                            126 ;;;-----------------------------------------
                            127 	.globl	_sound_isr
   00B2                     128 _sound_isr:
                            129 ;;;-----------------------------------------
                            130 ;;;  PROLOGUE for sound_isr
                            131 ;;;-----------------------------------------
   00B2 18 3C               132 	pshy	; Save stack frame
   00B4 18 30               133 	tsy	; Set current stack frame
   00B6 DE 00               134 	ldx	*ZD5
   00B8 3C                  135 	pshx	; pushed register *ZD5
                            136 ;;;END PROLOGUE
   00B9 FC 10 0E            137 	ldd	4110
   00BC DD 00               138 	std	*ZD5	; movhi: 4110 -> *ZD5
   00BE DC 00               139 	ldd	*ZD5
   00C0 F3 00 00            140 	addd	_beep_tone
   00C3 DD 00               141 	std	*ZD5	; addhi3: *ZD5 by _beep_tone -> *ZD5
   00C5 DC 00               142 	ldd	*ZD5
   00C7 FD 10 1E            143 	std	4126	; movhi: *ZD5 -> 4126
   00CA C6 08               144 	ldab	#8
   00CC F7 10 23            145 	stab	4131	; movqi: #8 -> 4131
                            146 ;;;EPILOGUE
   00CF 38                  147 	pulx	; Pulling register *ZD5
   00D0 DF 00               148 	stx	*ZD5
   00D2 18 38               149 	puly	; Restore stack frame
   00D4 39                  150 	rts	; return from function
                            151 ;;;-----------------------------------------
                            152 ;;; END EPILOGUE for sound_isr
                            153 ;;;-----------------------------------------
                            154 	.area	_BSS
                            155 	.globl	_beep_tone
   0000                     156 _beep_tone:	.blkb	2
                            157 	; END
